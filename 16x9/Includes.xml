<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation  -->
<includes>
	<include file="Defaults.xml" />
	<!-- Views -->
	<include file="View_50_List.xml" />
	<include file="View_51_BigWide.xml" />
	<include file="View_52_BigList.xml" />
	<include file="View_53_Poster.xml" />
	<include file="View_54_Banner.xml" />
	<include file="View_55_Wall.xml" />
	<include file="View_56_MediaInfo.xml" />
	<include file="View_57_ExtraInfo.xml" />
	<include file="View_58_Cards.xml" />
	<include file="View_59_BannerPlex.xml" />
	<include file="View_500_Thumbnails.xml" />
	<include file="View_503_Poster_Square.xml" />
	<include file="View_505_Wall_Square.xml" />
	<include file="View_514_PosterShift.xml" />
	<include file="View_513_PosterRow.xml" />
	<include file="View_515_Netflix.xml" />

	<include file="Includes_Furniture.xml" />
	<include file="Includes_Home.xml" />
	<include file="Includes_HomeEmby.xml" />
	<include file="Includes_GlobalSearch.xml" />
	<include file="Includes_NextAired.xml" />
	<include file="Includes_Labels.xml" />
	<include file="Includes_Images.xml" />
	<include file="Includes_Animations.xml" />
	<include file="Includes_Defs.xml" />
	<include file="Includes_PVR.xml" />
	<include file="Includes_OSD.xml" />
	<include file="Includes_Home_NetflixUI.xml" />
	<include file="Includes_Home_NetflixXbmcUI.xml" />
	<!-- Skin Shortcuts -->
	<include file="script-skinshortcuts-includes.xml" />
	<include name="HiddenButton">
		<posx>-20</posx>
		<posy>-20</posy>
		<width>1</width>
		<height>1</height>
		<label>-</label>
		<texturenofocus>-</texturenofocus>
		<texturefocus>-</texturefocus>
	</include>
	<include name="Dimensions_Fullscreen">
		<posx>0</posx>
		<posy>0</posy>
		<width>1920</width>
		<height>1080</height>
	</include>
	<include name="WindowID">
		<width>780</width>
		<height>21</height>
		<textcolor>White</textcolor>
		<shadowcolor>Black</shadowcolor>
		<align>left</align>
	</include>
	<include name="DialogID">
		<width>780</width>
		<height>21</height>
		<textcolor>PanelWhite70</textcolor>
		<shadowcolor>Black</shadowcolor>
		<align>left</align>
	</include>
	<include name="PathID">
		<posx>20r</posx>
		<posy>15</posy>
		<width>780</width>
		<height>21</height>
		<textcolor>EmbyGreen</textcolor>
		<shadowcolor>Black</shadowcolor>
		<align>right</align>
	</include>
	<include name="ControlID">
		<posx>20r</posx>
		<posy>48</posy>
		<width>780</width>
		<height>21</height>
		<textcolor>Red</textcolor>
		<shadowcolor>Black</shadowcolor>
		<align>right</align>
	</include>
	<include name="ControlID2">
		<posx>20r</posx>
		<posy>81</posy>
		<width>1920</width>
		<height>21</height>
		<textcolor>amber</textcolor>
		<shadowcolor>Black</shadowcolor>
		<align>right</align>
	</include>
	<include name="GlobalOverlay">
		<control type="image">
			<include>Animation.FadeIn</include>
			<include condition="!Window.IsVisible(DialogButtonMenu.xml)">Animation.FadeOut</include>
			<include>Dimensions_Fullscreen</include>
			<texture colordiffuse="Background" border="2">common/home-back.png</texture>
		</control>
	</include>
	<variable name="GlobalFanart">
		<!-- Skin Shortcuts -->
		<value condition="Window.IsActive(script-skinshortcuts.xml) + !String.IsEmpty(Container(211).ListItem.Property(Background))">$INFO[Container(211).ListItem.Property(background)]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + String.IsEqual(Container(211).ListItem.Property(type),photos)">special://skin/extras/backgrounds/Photos.jpg</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + String.IsEqual(Container(211).ListItem.Property(type),homevideos)">special://skin/extras/backgrounds/video.jpg</value>
		<!-- Home Screen -->
		<value condition="Window.IsVisible(home) + !String.IsEmpty(Container(300).ListItem.Property(Background))">$INFO[Container(300).ListItem.Property(Background)]</value>
		<value condition="Window.IsVisible(home) + String.IsEqual(Container(300).ListItem.Property(type),photos)">special://skin/extras/backgrounds/Photos.jpg</value>
		<value condition="Window.IsVisible(home) + String.IsEqual(Container(300).ListItem.Property(type),homevideos)">special://skin/extras/backgrounds/video.jpg</value>
		<value condition="Window.IsVisible(home) + String.IsEqual(Container(300).ListItem.Property(type),movies)">$INFO[Window(Home).Property(script.grab.fanart.Movie.FanArt)]</value>
		<value condition="Window.IsVisible(home) + String.IsEqual(Container(300).ListItem.Property(type),tvshows)">$INFO[Window(Home).Property(script.grab.fanart.TV.FanArt)]</value>
		<value condition="Window.IsVisible(home) + String.IsEqual(Container(300).ListItem.Property(type),music)">$INFO[Window(Home).Property(script.grab.fanart.Music.FanArt)]</value>
		<value condition="Window.IsVisible(home) + String.IsEqual(Container(300).ListItem.Property(type),weather) + !String.IsEmpty(Skin.String(weatherfanart.path)) + !Skin.HasSetting(weatherfanart.multi)">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$INFO[Skin.String(weatherfanart.ext)]</value>
		<value condition="Window.IsVisible(home) + String.IsEqual(Container(300).ListItem.Property(type),weather) + !String.IsEmpty(Skin.String(weatherfanart.path)) + Skin.HasSetting(weatherfanart.multi)">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]/</value>
		<value condition="Window.IsVisible(home) + !String.IsEmpty(Container(4012).ListItem.Art(fanart))">$INFO[Container(300).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + !String.IsEmpty(Container(4012).ListItem.Property(fanart))">$INFO[Container(300).ListItem.Property(fanart)]</value>
		<value condition="Window.IsVisible(home) + String.IsEqual(Container(4012).ListItem.Property(background),playlistBackground)">$INFO[Container(9988).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(home) + String.IsEqual(Container(4012).ListItem.Property(widget),LiveTV)">$INFO[Window(Home).Property(script.grab.fanart.Global.FanArt)]</value>
		<value condition="Window.IsVisible(home) + !String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
		<value condition="Window.IsVisible(home)">$INFO[Window(Home).Property(script.grab.fanart.Global.FanArt)]</value>
		<!-- Other windows -->
		<value condition="Window.IsActive(script-globalsearch-infodialog.xml) | Window.IsActive(script-globalsearch-main.xml)">$VAR[GlobalSearchArtInfo]</value>
		<value condition="Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml)">special://skin/extras/backgrounds/Family.jpg</value>
		<value condition="Window.IsVisible(weather) + !String.IsEmpty(Skin.String(weatherfanart.path)) + Skin.HasSetting(weatherfanart.multi)">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]/</value>
		<value condition="Window.IsVisible(weather) + !String.IsEmpty(Skin.String(weatherfanart.path)) + !Skin.HasSetting(weatherfanart.multi)">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$INFO[Skin.String(weatherfanart.ext)]</value>
		<value condition="[Window.IsActive(Videos) | Window.IsActive(movieinformation)]  +  String.Contains(ListItem.Path,plugin://plugin.video.emby) + Skin.HasSetting(EnableExtraFanart)">$INFO[ListItem.Path]extrafanart/</value>
		<value condition="[Window.IsActive(Videos) | Window.IsActive(movieinformation)] + Skin.HasSetting(EnableExtraFanart) + !String.IsEmpty(Window(Home).Property(ExtraFanArtPath))">$INFO[Window(Home).Property(ExtraFanArtPath)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(9500).ListItem.Art(fanart))">$INFO[Container(9500).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(500).ListItem.Art(fanart))">$INFO[Container(500).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>
		<value condition="!String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
		<!-- Skin Shortcuts -->
		<value condition="Window.IsVisible(script-skinshortcuts.xml) + !String.IsEmpty(Container(211).ListItem.Property(Background))">$INFO[Container(211).ListItem.Property(Background)]</value>
		<value>common/null.png</value>
	</variable>
	<include name="GlobalVideoWindow">
		<control type="image" description="Background">
			<include>Dimensions_Fullscreen</include>
			<texture colordiffuse="Background">common/bg.jpg</texture>
		</control>
		<control type="image" description="Background">
			<include>Dimensions_Fullscreen</include>
			<texture colordiffuse="Black">common/white.png</texture>
			<visible>Player.HasVideo + Skin.HasSetting(global.showvideo)</visible>
		</control>
		<control type="videowindow">
			<visible>Skin.HasSetting(global.showvideo)</visible>
			<include>Dimensions_Fullscreen</include>
		</control>
	</include>
	<include name="GlobalVisualisation">
		<control type="group">
			<visible>Player.HasAudio + Skin.HasSetting(global.showvisualisation)</visible>
			<control type="visualisation">
				<visible>Skin.HasSetting(ArtistSlideShow.Disabled) | !System.HasAddon(script.artistslideshow) | Skin.HasSetting(OSDVisualisation.ShowFanart)</visible>
				<description>visualisation</description>
				<include>Dimensions_Fullscreen</include>
			</control>
			<control type="multiimage">
				<aspectratio>scale</aspectratio>
				<include>Dimensions_Fullscreen</include>
				<timeperimage>10000</timeperimage>
				<randomize>true</randomize>
				<fadetime>600</fadetime>
				<loop>yes</loop>
				<imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
				<visible>System.HasAddon(script.artistslideshow) + !Skin.HasSetting(ArtistSlideShow.Disabled)</visible>
				<animation effect="fade" start="100" end="65" time="0" condition="Skin.HasSetting(OSDVisualisation.ShowFanart)">Conditional</animation>
				<animation effect="zoom" start="115" end="135" center="auto" time="19000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
				<animation effect="slide" start="-10,-10" end="20,20" time="14000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
				<animation effect="rotate" center="360,640" start="-2" end="3" time="27000" tween="back" easing="inout" pulse="true"  condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
			</control>
		</control>
	</include>
	<include name="GlobalBackgroundFade">
		<colordiffuse>$VAR[FanartFadeLabel]</colordiffuse>
	</include>
	<include name="GlobalBackground">
		<include>GlobalVideoWindow</include>
		<include>GlobalVisualisation</include>
		<control type="image" description="Background">
			<include>Dimensions_Fullscreen</include>
			<include>Animation.FadeFromHome</include>
			<texture colordiffuse="Background">common/bg.jpg</texture>
			<visible>!Window.IsVisible(home)</visible>
			<animation effect="fade" start="100" end="75" time="200" condition="Player.HasVideo + Skin.HasSetting(global.showvideo) | Player.HasAudio + Skin.HasSetting(global.showvisualisation)">Conditional</animation>
		</control>
		<!-- Dump this -->
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<aspectratio align="center">scale</aspectratio>
			<texture fallback="common/black.png" background="true">$INFO[Window(home).Property(VideoInfo.ImageFilter)]</texture>
			<visible>Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml)</visible>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<fadetime>600</fadetime>
		</control>
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<aspectratio align="center">scale</aspectratio>
			<texture colordiffuse="$INFO[Window(home).Property(VideoInfo.ImageColor)]">common/floor.png</texture>
			<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
			<visible>Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml)</visible>
		</control>
		<control type="multiimage" description="Fanart">
 			<include condition="!Window.IsVisible(home)">GlobalBackgroundFade</include>
			<visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
			<visible>!Skin.HasSetting(global.hidefanart) | Window.IsVisible(home)</visible>
			<visible>![Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml)]</visible>
			<include>Dimensions_Fullscreen</include>
			<include>Animation.FadeFromHome</include>
			<animation effect="fade" end="0" start="100" time="350" tween="cubic" easing="inout" condition="Window.IsVisible(home)">WindowClose</animation>
			<fadetime>600</fadetime>
			<timeperimage>12000</timeperimage>
			<randomize>true</randomize>
			<aspectratio>scale</aspectratio>
			<imagepath background="true">$VAR[GlobalFanart]</imagepath>
			<animation effect="zoom" start="115" end="135" center="auto" time="19000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
			<animation effect="slide" start="-10,-10" end="20,20" time="14000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
			<animation effect="rotate" center="360,640" start="-2" end="3" time="27000" tween="back" easing="inout" pulse="true"  condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
		</control>
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<aspectratio align="center">scale</aspectratio>
			<texture fallback="common/black.png" background="true">$INFO[Window(home).Property(Home.ImageFilter)]</texture>
			<visible>Window.IsVisible(home)</visible>
		</control>
		<control id="8328" type="image">
			<include>Dimensions_Fullscreen</include>
			<colordiffuse>DialogFanartFade</colordiffuse>
			<texture fallback="empty.png" background="true">$INFO[ListItem.Art(fanart)]</texture>
			<visible>Control.HasFocus(4000)</visible>
		</control>
		<control type="image">
			<include>Dimensions_Fullscreen</include>
			<colordiffuse>DialogFanartFade</colordiffuse>
			<texture>special://skin/extras/backgrounds/Family.jpg</texture>
			<visible>String.Contains(Control.GetLabel(8328),empty.png)</visible>
			<visible>Control.HasFocus(4000)</visible>
		</control>
		<control type="image" description="FanartOverlay">
			<include>Dimensions_Fullscreen</include>
			<visible>!Window.IsVisible(home)</visible>
			<include>Animation.FadeFromHome</include>
			<texture colordiffuse="FloorFade">common/floor.png</texture>
		</control>
		<control type="image">
			<posx>-200</posx>
			<posy>0</posy>
			<width>3000</width>
			<height>1080</height>
			<aspectratio>stretch</aspectratio>
			<!--<include>Animation_FanartFade</include>-->
			<texture background="true" colordiffuse="FloorFade">backgrounds/black_content2.png</texture>
			<visible>Control.HasFocus(515)</visible>
		</control>
	</include>
	<include name="GlobalBackgroundExtended">
		<control type="image" description="Background">
			<include>Dimensions_Fullscreen</include>
			<include>Animation.FadeFromHome</include>
			<texture colordiffuse="Background">common/bg.jpg</texture>
		</control>
		<control type="multiimage" description="Fanart">
			<include>GlobalBackgroundFade</include>
			<visible>!Skin.HasSetting(global.hidefanart)</visible>
			<include>Dimensions_Fullscreen</include>
			<include>Animation.FadeFromHome</include>
			<fadetime>600</fadetime>
			<timeperimage>12000</timeperimage>
			<randomize>true</randomize>
			<aspectratio>scale</aspectratio>
			<imagepath background="true">$VAR[GlobalFanart]</imagepath>
			<animation type="Conditional" condition="Skin.HasSetting(Fanart.Animate)">
				<effect type="zoom" start="115" end="135" center="auto" time="19000" tween="sine" easing="inout" pulse="true" />
				<effect type="slide" start="-10,-10" end="20,20" time="14000" tween="cubic" easing="inout" pulse="true"/>
				<effect type="rotate" center="360,640" start="-2" end="3" time="27000" tween="back" easing="inout" pulse="true"/>
			</animation>
		</control>
		<control type="image" description="FanartOverlay">
			<include>Dimensions_Fullscreen</include>
			<include>Animation.FadeFromHome</include>
			<texture colordiffuse="FloorFade">common/floor.png</texture>
		</control>
	</include>
	<include name="NetflixBackground">
		<include>GlobalVideoWindow</include>
		<include>GlobalVisualisation</include>
		<control type="image">
			<description>List Panel fanart</description>
			<include>Dimensions_Fullscreen</include>
			<texture background="true">$INFO[Window(Home).Property(script.grab.fanart.Global.FanArt)]</texture>
			<fadetime>500</fadetime>
			<!--<include>Animation_FanartFade</include>-->
			<visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
		</control>
		<control type="image">
			<description>List Panel fanart</description>
			<include>Dimensions_Fullscreen</include>
			<texture background="true">$VAR[NetflixFanart]</texture>
			<fadetime>500</fadetime>
			<!--<include>Animation_FanartFade</include>-->
			<visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
		</control>
		<control type="image">
			<posx>-200</posx>
			<posy>0</posy>
			<width>3000</width>
			<height>1080</height>
			<aspectratio>stretch</aspectratio>
			<!--<include>Animation_FanartFade</include>-->
			<texture>backgrounds/black_content2.png</texture>
		</control>
	</include>
	<!-- No textures -->
	<include name="NoTextures">
		<texturefocus>-</texturefocus>
		<texturenofocus>-</texturenofocus>
		<alttexturenofocus>-</alttexturenofocus>
		<alttexturefocus>-</alttexturefocus>
		<textureradioonfocus>-</textureradioonfocus>
		<textureradioonnofocus>-</textureradioonnofocus>
		<textureradioofffocus>-</textureradioofffocus>
		<textureradiooffnofocus>-</textureradiooffnofocus>
		<textureup>-</textureup>
		<texturedown>-</texturedown>
		<textureupfocus>-</textureupfocus>
		<texturedownfocus>-</texturedownfocus>
	</include>
	<!-- MPAA Ratings -->
	<include name="lib_Rating_MPAA">
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>60</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_NC-17_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + String.Contains(ListItem.mpaa,NC-17)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_PG-13_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + String.Contains(ListItem.mpaa,PG-13)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_NR_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + [String.Contains(ListItem.Mpaa,Unrated) | String.Contains(ListItem.Mpaa,Approved) | String.Contains(ListItem.Mpaa,Passed) | String.Contains(ListItem.Mpaa,USA:NR) | String.Contains(ListItem.Mpaa,US:NR) | String.IsEqual(ListItem.Mpaa,NR) | String.Contains(ListItem.Mpaa,Not Rated)]</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_PG_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + [String.Contains(ListItem.Mpaa,USA:PG) | String.Contains(ListItem.Mpaa,US:PG) | String.Contains(ListItem.mpaa,Rated PG) | String.IsEqual(ListItem.Mpaa,PG)] + !String.Contains(ListItem.Mpaa,PG-13)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_R_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + [String.Contains(ListItem.mpaa,US:R) | String.Contains(ListItem.mpaa,USA:R) | String.Contains(ListItem.mpaa,Rated R) | String.IsEqual(ListItem.Mpaa,R)] </visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_G_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + [String.Contains(ListItem.mpaa,US:G) | String.Contains(ListItem.mpaa,USA:G) | String.Contains(ListItem.mpaa,Rated G) | String.IsEqual(ListItem.Mpaa,G)] </visible>
		</control>
	</include>
	<include name="lib_Rating_MPAA_home">
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>60</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_NC-17_Certificate_US.png</texture>
			<visible>!String.IsEmpty(Container(301).ListItem.Mpaa) + String.Contains(Container(301).ListItem.mpaa,NC-17)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_PG-13_Certificate_US.png</texture>
			<visible>!String.IsEmpty(Container(301).ListItem.Mpaa) + String.Contains(Container(301).ListItem.mpaa,PG-13)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_NR_Certificate_US.png</texture>
			<visible>!String.IsEmpty(Container(301).ListItem.Mpaa) + [String.Contains(Container(301).ListItem.mpaa,Unrated) | String.Contains(Container(301).ListItem.mpaa,Passed) | String.Contains(Container(301).ListItem.mpaa,Approved) | String.Contains(Container(301).ListItem.mpaa,USA:NR) | String.Contains(Container(301).ListItem.mpaa,US:NR) | String.IsEqual(Container(301).ListItem.Mpaa,NR) | String.Contains(Container(301).ListItem.Mpaa,Not Rated)]</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_PG_Certificate_US.png</texture>
			<visible>!String.IsEmpty(Container(301).ListItem.Mpaa) + [String.Contains(Container(301).ListItem.mpaa,USA:PG) | String.Contains(Container(301).ListItem.mpaa,US:PG) | String.Contains(Container(301).ListItem.mpaa,Rated PG) | String.IsEqual(Container(301).ListItem.Mpaa,PG)] + !String.Contains(Container(301).ListItem.mpaa,PG-13)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_R_Certificate_US.png</texture>
			<visible>!String.IsEmpty(Container(301).ListItem.Mpaa) + [String.Contains(Container(301).ListItem.mpaa,US:R) | String.Contains(Container(301).ListItem.mpaa,USA:R) | String.Contains(Container(301).ListItem.mpaa,Rated R) | String.IsEqual(Container(301).ListItem.Mpaa,R)]</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_G_Certificate_US.png</texture>
			<visible>!String.IsEmpty(Container(301).ListItem.Mpaa) + [String.Contains(Container(301).ListItem.mpaa,US:G) | String.Contains(Container(301).ListItem.mpaa,USA:G) | String.Contains(Container(301).ListItem.mpaa,Rated G) | String.IsEqual(Container(301).ListItem.Mpaa,G)]</visible>
		</control>
	</include>
	<!-- MPAA Ratings -->
	<include name="lib_Rating_MPAA_small">
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>60</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_NC-17_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + String.Contains(ListItem.mpaa,NC-17)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_PG-13_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + String.Contains(ListItem.mpaa,PG-13)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_NR_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + [String.Contains(ListItem.Mpaa,Unrated) | String.Contains(ListItem.Mpaa,Approved) | String.Contains(ListItem.Mpaa,Passed) | String.Contains(ListItem.mpaa,USA:NR) | String.Contains(ListItem.mpaa,US:NR) | String.IsEqual(ListItem.Mpaa,NR) | String.Contains(ListItem.Mpaa,Not Rated)]</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_PG_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + [String.Contains(ListItem.mpaa,USA:PG) | String.Contains(ListItem.mpaa,US:PG) | String.Contains(ListItem.mpaa,Rated PG) | String.IsEqual(ListItem.Mpaa,PG)] + !String.Contains(ListItem.mpaa,PG-13)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_R_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + [String.Contains(ListItem.mpaa,US:R) | String.Contains(ListItem.mpaa,USA:R) | String.Contains(ListItem.mpaa,Rated R) | String.IsEqual(ListItem.Mpaa,R)]</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/MPAA_G_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + [String.Contains(ListItem.mpaa,US:G) | String.Contains(ListItem.mpaa,USA:G) | String.Contains(ListItem.mpaa,Rated G) | String.IsEqual(ListItem.Mpaa,G)]</visible>
		</control>
	</include>
	<!-- TV Ratings -->
	<include name="lib_Rating_TV">
		<control type="image">
			<centertop>50%</centertop>
			<width>58</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/TV-14_Certificate_US.png</texture>
			<visible>String.Contains(ListItem.mpaa,TV-14)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>118</width>
			<height>62</height>
			<texture>flags/rating/TV-G_Certificate_US.png</texture>
			<visible>String.Contains(ListItem.mpaa,TV-G)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>58</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/TV-PG_Certificate_US.png</texture>
			<visible>String.Contains(ListItem.mpaa,TV-PG)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>58</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/TV-MA_Certificate_US.png</texture>
			<visible>String.Contains(ListItem.mpaa,TV-MA)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>58</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/tv-y.png</texture>
			<visible>String.Contains(ListItem.mpaa,TV-Y)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>58</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/tv-y7.png</texture>
			<visible>String.Contains(ListItem.mpaa,TV-Y7)</visible>
		</control>
	</include>
	<include name="lib_Rating_TV_home">
		<control type="image">
			<centertop>50%</centertop>
			<width>58</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/TV-14_Certificate_US.png</texture>
			<visible>String.Contains(Container(301).ListItem.mpaa,TV-14)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>58</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/TV-G_Certificate_US.png</texture>
			<visible>String.Contains(Container(301).ListItem.mpaa,TV-G)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>58</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/TV-MA_Certificate_US.png</texture>
			<visible>String.Contains(Container(301).ListItem.mpaa,TV-MA)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>58</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/tv-y.png</texture>
			<visible>String.Contains(Container(301).ListItem.mpaa,TV-Y)</visible>
		</control>
		<control type="image">
			<centertop>50%</centertop>
			<width>58</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture>flags/rating/tv-y7.png</texture>
			<visible>String.Contains(Container(301).ListItem.mpaa,TV-Y7)</visible>
		</control>
	</include>
	<!-- MPAA Ratings -->
	<include name="lib_RatingDV_MPAA">
		<control type="image">
			<top>14</top>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture colordiffuse="Black700" fallback="flags/rating/MPAA_NR_Certificate_US.png">flags/rating/MPAA_NC-17_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + String.Contains(ListItem.mpaa,NC-17)</visible>
		</control>
		<control type="image">
			<top>14</top>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture colordiffuse="Black700" fallback="flags/rating/MPAA_NR_Certificate_US.png">flags/rating/MPAA_PG-13_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + String.Contains(ListItem.mpaa,PG-13)</visible>
		</control>
		<control type="image">
			<top>14</top>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture colordiffuse="Black700" fallback="flags/rating/MPAA_NR_Certificate_US.png">flags/rating/MPAA_NR_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + [String.Contains(ListItem.Mpaa,Unrated) | String.Contains(ListItem.Mpaa,Approved) | String.Contains(ListItem.Mpaa,Passed) | String.Contains(ListItem.Mpaa,USA:NR) | String.Contains(ListItem.Mpaa,US:NR) | String.IsEqual(ListItem.Mpaa,NR) | String.Contains(ListItem.Mpaa,Not Rated)]</visible>
		</control>
		<control type="image">
			<top>14</top>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture colordiffuse="Black700" fallback="flags/rating/MPAA_NR_Certificate_US.png">flags/rating/MPAA_PG_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + [String.Contains(ListItem.Mpaa,USA:PG) | String.Contains(ListItem.Mpaa,US:PG) | String.Contains(ListItem.mpaa,Rated PG) | String.IsEqual(ListItem.Mpaa,PG)] + !String.Contains(ListItem.Mpaa,PG-13)</visible>
		</control>
		<control type="image">
			<top>14</top>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture colordiffuse="Black700" fallback="flags/rating/MPAA_NR_Certificate_US.png">flags/rating/MPAA_R_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + [String.Contains(ListItem.mpaa,US:R) | String.Contains(ListItem.mpaa,USA:R) | String.Contains(ListItem.mpaa,Rated R) | String.IsEqual(ListItem.Mpaa,R)]</visible>
		</control>
		<control type="image">
			<top>14</top>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture colordiffuse="Black700" fallback="flags/rating/MPAA_NR_Certificate_US.png">flags/rating/MPAA_G_Certificate_US.png</texture>
			<visible>Container.Content(movies) + !String.IsEmpty(ListItem.Mpaa) + [String.Contains(ListItem.mpaa,US:G) | String.Contains(ListItem.mpaa,USA:G) | String.Contains(ListItem.mpaa,Rated G) | String.IsEqual(ListItem.Mpaa,G)]</visible>
		</control>
	</include>
	<!-- TV Ratings -->
	<include name="lib_RatingDV_TV">
		<control type="image">
			<top>14</top>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture colordiffuse="Black700" fallback="flags/rating/MPAA_NR_Certificate_US.png">flags/rating/TV-14_Certificate_US.png</texture>
			<visible>[Container.Content(episode) | Container.Content(episodes) | Container.Content(tvshow) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(season)] + !String.IsEmpty(ListItem.Mpaa) + String.Contains(ListItem.Mpaa,14)</visible>
		</control>
		<control type="image">
			<top>14</top>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture colordiffuse="Black700" fallback="flags/rating/MPAA_NR_Certificate_US.png">flags/rating/TV-G_Certificate_US.png</texture>
			<visible>[Container.Content(episode) | Container.Content(episodes) | Container.Content(tvshow) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(season)] + !String.IsEmpty(ListItem.Mpaa) + String.Contains(ListItem.Mpaa,g) + !String.Contains(ListItem.Mpaa,pg)</visible>
		</control>
		<control type="image">
			<top>14</top>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture colordiffuse="Black700" fallback="flags/rating/MPAA_NR_Certificate_US.png">flags/rating/TV-PG_Certificate_US.png</texture>
			<visible>[Container.Content(episode) | Container.Content(episodes) | Container.Content(tvshow) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(season)] + !String.IsEmpty(ListItem.Mpaa) + String.Contains(ListItem.Mpaa,pg)</visible>
		</control>
		<control type="image">
			<top>14</top>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture colordiffuse="Black700" fallback="flags/rating/MPAA_NR_Certificate_US.png">flags/rating/TV-MA_Certificate_US.png</texture>
			<visible>[Container.Content(episode) | Container.Content(episodes) | Container.Content(tvshow) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(season)] + !String.IsEmpty(ListItem.Mpaa) + String.Contains(ListItem.Mpaa,ma)</visible>
		</control>
		<control type="image">
			<top>14</top>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture colordiffuse="Black700" fallback="flags/rating/MPAA_NR_Certificate_US.png">flags/rating/tv-y.png</texture>
			<visible>[Container.Content(episode) | Container.Content(episodes) | Container.Content(tvshow) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(season)] + !String.IsEmpty(ListItem.Mpaa) + String.Contains(ListItem.Mpaa,y) + !String.Contains(ListItem.Mpaa,y7)</visible>
		</control>
		<control type="image">
			<top>14</top>
			<width>118</width>
			<height>50</height>
			<colordiffuse>Black100</colordiffuse>
			<texture colordiffuse="Black700" fallback="flags/rating/MPAA_NR_Certificate_US.png">flags/rating/tv-y7.png</texture>
			<visible>[Container.Content(episode) | Container.Content(episodes) | Container.Content(tvshow) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(season)] + !String.IsEmpty(ListItem.Mpaa) + String.Contains(ListItem.Mpaa,y7)</visible>
		</control>
	</include>
	<include name="LanguageFlagsExtraInfo">
		<control type="grouplist">
		<height>52</height>
		<width>180</width>
		<orientation>horizontal</orientation>
			<control type="label">
				<width>180</width>
				<scroll>true</scroll>
				<scrollspeed>10</scrollspeed>
				<font>EPGTimeline</font>
				<textcolor>Dark2</textcolor>
				<label>$INFO[Window.Property(AudioLanguage.1)]$INFO[Window.Property(AudioLanguage.2), ,]$INFO[Window.Property(AudioLanguage.3), ,]$INFO[Window.Property(AudioLanguage.4), ,]$INFO[Window.Property(AudioLanguage.5), ,]$INFO[Window.Property(AudioLanguage.6), ,]$INFO[Window.Property(AudioLanguage.7), ,]$INFO[Window.Property(AudioLanguage.8), ,]$INFO[Window.Property(AudioLanguage.9), ,]$INFO[Window.Property(AudioLanguage.10), ,]</label>
			</control>
		</control>
	</include>
	<include name="SubtitleFlagsExtraInfo">
		<control type="grouplist">
		<height>52</height>
		<width>180</width>
		<orientation>horizontal</orientation>
			<control type="label">
				<width>180</width>
				<scroll>true</scroll>
				<scrollspeed>10</scrollspeed>
				<font>EPGTimeline</font>
				<textcolor>Dark2</textcolor>
				<label>$INFO[Window.Property(SubtitleLanguage.1)]$INFO[Window.Property(SubtitleLanguage.2), ,]$INFO[Window.Property(SubtitleLanguage.3), ,]$INFO[Window.Property(SubtitleLanguage.4), ,]$INFO[Window.Property(SubtitleLanguage.5), ,]$INFO[Window.Property(SubtitleLanguage.6), ,]$INFO[Window.Property(SubtitleLanguage.7), ,]$INFO[Window.Property(SubtitleLanguage.8), ,]$INFO[Window.Property(SubtitleLanguage.9), ,]$INFO[Window.Property(SubtitleLanguage.10), ,]</label>
			</control>
		</control>
	</include>
</includes>