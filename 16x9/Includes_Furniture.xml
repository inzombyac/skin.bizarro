<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="Furniture_Scrollbar">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<centerright>60</centerright>
			<posy>PosterPad</posy>
			<height>PosterH</height>
			<width>8</width>
			<onleft>50</onleft>
			<onright condition="!Skin.HasSetting(global.kioskmode)">9000</onright>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="100,0" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
		</control>
	</include>
	<include name="Furniture_ScrollbarW">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<centerleft>60</centerleft>
			<posy>PosterPad</posy>
			<height>PosterH</height>
			<width>8</width>
			<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
			<onright>50</onright>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="-100,0" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<visible>Container.Column(0)</visible>
		</control>
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<centerright>60</centerright>
			<posy>PosterPad</posy>
			<height>PosterH</height>
			<width>8</width>
			<onleft>50</onleft>
			<onright condition="!Skin.HasSetting(global.kioskmode)">9000</onright>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="100,0" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<visible>!Container.Column(0)</visible>
		</control>
	</include>
	<include name="Furniture_Scrollbar_Horizontal">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<left>SidePad</left>
			<width>1760</width>
			<bottom>65</bottom>
			<orientation>horizontal</orientation>
			<height>8</height>
			<onup>50</onup>
			<ondown condition="!Skin.HasSetting(global.kioskmode)">9000</ondown>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
		</control>
	</include>
	<include name="Furniture_ButtonBack">
		<width>64</width>
		<height>64</height>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="75" end="100" center="auto" time="200" />
		</animation>
	</include>
	<include name="Furniture_ButtonBack_Circle">
		<width>64</width>
		<height>64</height>
		<texture colordiffuse="Dark1">common/circle.png</texture>
	</include>
	<include name="Furniture_NowPlaying">
		<!-- Next Recording -->
		<control type="group">
			<top>40</top>
			<left>680</left>
			<width>660</width>
			<height>100</height>
			<include>Animation.FadeIn.Slide</include>
			<include>Animation.FadeOut</include>
			<visible>Player.HasMedia</visible>
			<visible>!String.Contains(Window(10025).Property(PlayingBackgroundMedia),True)</visible>
				<animation effect="zoom" start="100" end="85" condition="true">Conditional</animation>
			<control type="image">
				<description>background image</description>
				<posx>0</posx>
				<posy>0</posy>
				<width>660</width>
				<height>100</height>
				<texture border="16" colordiffuse="Background">common/rounded-shadow8.png</texture>
				<animation effect="fade" start="100" end="90" condition="true">Conditional</animation>
			</control>
			<control type="group">
				<centertop>50%</centertop>
				<centerleft>52</centerleft>
				<height>100</height>
				<width>100</width>
				<control type="image" description="Play">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture colordiffuse="Dark1">progress/play.png</texture>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
					<visible>!Player.Paused + !Player.Muted</visible>
				</control>
				<control type="image" description="Pause">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture colordiffuse="Dark1">progress/pause.png</texture>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
					<visible>Player.Paused</visible>
				</control>
				<control type="image" description="Mute">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture colordiffuse="Dark1">progress/mute.png</texture>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
					<visible>Player.Muted + !Player.Paused</visible>
				</control>
				<control type="progress" id="9666">
					<texturebg>-</texturebg>
					<lefttexture>-</lefttexture>
					<midtexture>-</midtexture>
					<righttexture>-</righttexture>
					<info>Player.Progress</info>
					<visible>false</visible>
				</control>
				<control type="image">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<texture >$INFO[Control.GetLabel(9666),progress/circle/p,.png]</texture>
					<aspectratio align="center">keep</aspectratio>
					<visible>!String.IsEmpty(Player.Duration)</visible>
				</control>
			</control>
			<control type="group">
				<left>104</left>
				<width>550</width>
				<posy>10</posy>
				<control type="label">
					<centertop>24</centertop>
					<width>auto</width>
					<font>SmallBold</font>
					<align>left</align>
					<textcolor>Dark1</textcolor>
					<label>$INFO[Player.Title]</label>
				</control>
				<control type="label">
					<centertop>58</centertop>
					<align>left</align>
					<font>Flag</font>
					<width>auto</width>
					<textcolor>Dark2</textcolor>
					<label>$INFO[VideoPlayer.TvShowTitle,, ]$INFO[MusicPlayer.Artist,, ]$INFO[Player.Time]$INFO[Player.Duration, / ,]</label>
				</control>
				<control type="image">
					<right>10</right>
					<bottom>10</bottom>
					<width>100</width>
					<texture colordiffuse="$VAR[ColourHighlight2]">special://skin/extras/icons/equaliser.gif</texture>
					<visible>!Player.Paused</visible>
				</control>
				<control type="image">
					<right>10</right>
					<bottom>10</bottom>
					<width>100</width>
					<texture colordiffuse="$VAR[ColourHighlight2]">special://skin/extras/icons/equaliser_stop.gif</texture>
					<visible>Player.Paused</visible>
				</control>
				<control type="button" id="7788">
					<top>-5</top>
					<ondown>300</ondown>
					<left>-100</left>
					<width>652</width>
					<height>90</height>
					<disabledcolor>$VAR[OSDPanelWhite12]</disabledcolor>
					<textcolor>$VAR[OSDPanelWhite30]</textcolor>
					<focusedcolor>$VAR[ColourHighlight]</focusedcolor>
					<texturefocus colordiffuse="$VAR[ColourHighlight]" border="20">common/selectbox.png</texturefocus>
					<onclick>dialog.close(all,true)</onclick>
					<onclick>FullScreen</onclick>
				</control>
			</control>
		</control>
	</include>
	<!-- Flags -->
	<variable name="Flagstar1">
		<value condition="Integer.IsGreater(ListItem.UserRating,1) + !String.IsEmpty(ListItem.UserRating)">star10</value>
		<value condition="Integer.IsGreater(ListItem.UserRating,0) + !String.IsEmpty(ListItem.UserRating)">star5</value>
		<value condition="Integer.IsGreater(ListItem.Rating,1)">star10</value>
		<value condition="Integer.IsGreater(ListItem.Rating,0)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar2">
		<value condition="Integer.IsGreater(ListItem.UserRating,3) + !String.IsEmpty(ListItem.UserRating)">star10</value>
		<value condition="Integer.IsGreater(ListItem.UserRating,2) + !String.IsEmpty(ListItem.UserRating)">star5</value>
		<value condition="Integer.IsGreater(ListItem.Rating,3)">star10</value>
		<value condition="Integer.IsGreater(ListItem.Rating,2)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar3">
		<value condition="Integer.IsGreater(ListItem.UserRating,5) + !String.IsEmpty(ListItem.UserRating)">star10</value>
		<value condition="Integer.IsGreater(ListItem.UserRating,4) + !String.IsEmpty(ListItem.UserRating)">star5</value>
		<value condition="Integer.IsGreater(ListItem.Rating,5)">star10</value>
		<value condition="Integer.IsGreater(ListItem.Rating,4)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar4">
		<value condition="Integer.IsGreater(ListItem.UserRating,7) + !String.IsEmpty(ListItem.UserRating)">star10</value>
		<value condition="Integer.IsGreater(ListItem.UserRating,6) + !String.IsEmpty(ListItem.UserRating)">star5</value>
		<value condition="Integer.IsGreater(ListItem.Rating,7)">star10</value>
		<value condition="Integer.IsGreater(ListItem.Rating,6)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar5">
		<value condition="Integer.IsGreater(ListItem.UserRating,9) + !String.IsEmpty(ListItem.UserRating)">star10</value>
		<value condition="Integer.IsGreater(ListItem.UserRating,8) + !String.IsEmpty(ListItem.UserRating)">star5</value>
		<value condition="Integer.IsGreater(ListItem.Rating,9)">star10</value>
		<value condition="Integer.IsGreater(ListItem.Rating,8)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar1">
		<value condition="Integer.IsGreater(Container(9500).ListItem.UserRating,1) + !String.IsEmpty(Container(9500).ListItem.UserRating)">star10</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.UserRating,0) + !String.IsEmpty(Container(9500).ListItem.UserRating)">star5</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.Rating,1)">star10</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.Rating,0)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar2">
		<value condition="Integer.IsGreater(Container(9500).ListItem.UserRating,3) + !String.IsEmpty(Container(9500).ListItem.UserRating)">star10</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.UserRating,2) + !String.IsEmpty(Container(9500).ListItem.UserRating)">star5</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.Rating,3)">star10</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.Rating,2)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar3">
		<value condition="Integer.IsGreater(Container(9500).ListItem.UserRating,5) + !String.IsEmpty(Container(9500).ListItem.UserRating)">star10</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.UserRating,4) + !String.IsEmpty(Container(9500).ListItem.UserRating)">star5</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.Rating,5)">star10</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.Rating,4)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar4">
		<value condition="Integer.IsGreater(Container(9500).ListItem.UserRating,7) + !String.IsEmpty(Container(9500).ListItem.UserRating)">star10</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.UserRating,6) + !String.IsEmpty(Container(9500).ListItem.UserRating)">star5</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.Rating,7)">star10</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.Rating,6)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar5">
		<value condition="Integer.IsGreater(Container(9500).ListItem.UserRating,9) + !String.IsEmpty(Container(9500).ListItem.UserRating)">star10</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.UserRating,8) + !String.IsEmpty(Container(9500).ListItem.UserRating)">star5</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.Rating,9)">star10</value>
		<value condition="Integer.IsGreater(Container(9500).ListItem.Rating,8)">star5</value>
		<value>star0</value>
	</variable>
	<!-- MusicFlags -->
	<variable name="MusicFlagstar5">
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsGreater(ListItem.UserRating,9)">star10</value>
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsGreater(ListItem.UserRating,8)">star5</value>
		<value condition="Integer.IsGreater(ListItem.Rating,9)">star10</value>
		<value condition="Integer.IsGreater(ListItem.Rating,8)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar4">
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsGreater(ListItem.UserRating,7)">star10</value>
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsGreater(ListItem.UserRating,6)">star5</value>
		<value condition="Integer.IsGreater(ListItem.Rating,7)">star10</value>
		<value condition="Integer.IsGreater(ListItem.Rating,6)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar3">
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsGreater(ListItem.UserRating,5)">star10</value>
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsGreater(ListItem.UserRating,4)">star5</value>
		<value condition="Integer.IsGreater(ListItem.Rating,5)">star10</value>
		<value condition="Integer.IsGreater(ListItem.Rating,4)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar2">
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsGreater(ListItem.UserRating,3)">star10</value>
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsGreater(ListItem.UserRating,2)">star5</value>
		<value condition="Integer.IsGreater(ListItem.Rating,3)">star10</value>
		<value condition="Integer.IsGreater(ListItem.Rating,2)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar1">
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsGreater(ListItem.UserRating,1)">star10</value>
		<value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsGreater(ListItem.UserRating,0)">star5</value>
		<value condition="Integer.IsGreater(ListItem.Rating,1)">star10</value>
		<value condition="Integer.IsGreater(ListItem.Rating,0)">star5</value>
		<value>star0</value>
	</variable>
	<!-- MusicOSDFlags -->
	<variable name="OSDMusicFlagstar5">
		<value condition="Integer.IsGreater(MusicPlayer.Rating,9)">star10</value>
		<value condition="Integer.IsGreater(MusicPlayer.Rating,8)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar4">
		<value condition="Integer.IsGreater(MusicPlayer.Rating,7)">star10</value>
		<value condition="Integer.IsGreater(MusicPlayer.Rating,6)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar3">
		<value condition="Integer.IsGreater(MusicPlayer.Rating,5)">star10</value>
		<value condition="Integer.IsGreater(MusicPlayer.Rating,4)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar2">
		<value condition="Integer.IsGreater(MusicPlayer.Rating,3)">star10</value>
		<value condition="Integer.IsGreater(MusicPlayer.Rating,2)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar1">
		<value condition="Integer.IsGreater(MusicPlayer.Rating,1)">star10</value>
		<value condition="Integer.IsGreater(MusicPlayer.Rating,0)">star5</value>
		<value>star0</value>
	</variable>
	<include name="Furniture_Flags">
		<!-- <control type="group">
			<visible>!Skin.HasSetting(furniture.flags)</visible>
			<visible>!Window.IsVisible(DialogMusicInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) + !Window.IsVisible(script-ExtendedInfo Script-YoutubeList.xml)</visible>
			<visible>Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)</visible>
			<visible>!ListItem.IsParentFolder</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<left>0</left>
			<centerbottom>30</centerbottom>
			<width>120</width>
			<height>120</height>
			<visible>!String.StartsWith(ListItem.Path,videodb://movies/sets)</visible>
		</control> -->
		<control type="grouplist">
			<visible>!Skin.HasSetting(furniture.flags)</visible>
			<visible>!Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) + !Window.IsVisible(script-ExtendedInfo Script-YoutubeList.xml)</visible>
			<visible>Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs)</visible>
			<visible>!ListItem.IsParentFolder</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<left>0</left>
			<centerbottom>40</centerbottom>
			<width>1920</width>
			<height>120</height>
			<orientation>horizontal</orientation>
			<align>left</align>
			<itemgap>10</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="image">
				<posx>50</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar1].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar2].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar3].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar4].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[Flagstar5].png</texture>
			</control>
			<!-- Rotten Tomatoes -->
			<control type="group">
				<centertop>50%</centertop>
				<width>120</width>
				<height>64</height>
				<visible>!String.IsEmpty(Window(Home).Property(SkinHelper.RottenTomatoesMeter)) + !String.Contains(Window(Home).Property(SkinHelper.RottenTomatoesMeter),N/A)</visible>
				<control type="image">
					<height>50</height>
					<centertop>50%</centertop>
					<texture colordiffuse="Dark1">$VAR[RottenTomato]</texture>
					<aspectratio align="left">keep</aspectratio>
				</control>
				<control type="label">
					<left>57</left>
					<centertop>50%</centertop>
					<height>64</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>$INFO[Window(Home).Property(SkinHelper.RottenTomatoesMeter),,%]</label>
					<font>DurationFontSmall</font>
					<textcolor>Dark1</textcolor>
				</control>
			</control>
			<control type="image">
				<width>48</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/airing.png</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>Container.Content(tvshows) | Container.Content(seasons)</visible>
			</control>
			<control type="label">
				<width min="128">auto</width>
				<centertop>50%</centertop>
				<height>64</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$VAR[LabelNextAiredDetails]</label>
				<font>Flag</font>
				<textcolor>Dark2</textcolor>
				<visible>Container.Content(tvshows) | Container.Content(seasons)</visible>
			</control>
			<!-- sets -->
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture background="true">$INFO[Window(home).Property(Set.Movie.1.Art(discart))]</texture>
				<visible>!String.IsEmpty(Window(home).Property(Set.Movie.1.Art(discart)))</visible>
			</control>
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture background="true">$INFO[Window(home).Property(Set.Movie.2.Art(discart))]</texture>
				<visible>!String.IsEmpty(Window(home).Property(Set.Movie.2.Art(discart)))</visible>
			</control>
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture background="true">$INFO[Window(home).Property(Set.Movie.3.Art(discart))]</texture>
				<visible>!String.IsEmpty(Window(home).Property(Set.Movie.3.Art(discart)))</visible>
			</control>
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture background="true">$INFO[Window(home).Property(Set.Movie.4.Art(discart))]</texture>
				<visible>!String.IsEmpty(Window(home).Property(Set.Movie.4.Art(discart)))</visible>
			</control>
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture background="true">$INFO[Window(home).Property(Set.Movie.5.Art(discart))]</texture>
				<visible>!String.IsEmpty(Window(home).Property(Set.Movie.5.Art(discart)))</visible>
			</control>
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture background="true">$INFO[Window(home).Property(Set.Movie.6.Art(discart))]</texture>
				<visible>!String.IsEmpty(Window(home).Property(Set.Movie.6.Art(discart)))</visible>
			</control>
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture background="true">$INFO[Window(home).Property(Set.Movie.7.Art(discart))]</texture>
				<visible>!String.IsEmpty(Window(home).Property(Set.Movie.7.Art(discart)))</visible>
			</control>
			<control type="image">
				<width>120</width>
				<height>120</height>
				<centertop>50%</centertop>
				<texture background="true">$INFO[Window(home).Property(Set.Movie.8.Art(discart))]</texture>
				<visible>!String.IsEmpty(Window(home).Property(Set.Movie.8.Art(discart)))</visible>
			</control>
			<include>lib_Rating_TV</include>
			<include>lib_Rating_MPAA</include>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$VAR[HDSDImage]</texture>
				<visible>!String.StartsWith(ListItem.Path,videodb://movies/sets)</visible>
			</control>
			<control type="image">
				<width>108</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.VideoAspect,flags/aspectratio/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.VideoCodec,flags/video/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.AudioCodec,flags/audio/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.AudioChannels,flags/channels/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
			</control>
			<control type="group">
				<centertop>50%</centertop>
				<width>220</width>
				<height>64</height>
				<visible>!String.IsEmpty(ListItem.Duration)</visible>
				<visible>!Container.Content(tvshows)</visible>
				<control type="image">
					<height>50</height>
					<centertop>50%</centertop>
					<texture colordiffuse="Dark1">flags/time.png</texture>
					<aspectratio align="left">keep</aspectratio>
				</control>
				<control type="label">
					<left>57</left>
					<width>170</width>
					<centertop>50%</centertop>
					<height>64</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>$VAR[DurationLong]</label>
					<font>DurationFontSmall</font>
					<textcolor>Dark1</textcolor>
				</control>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/3D.png</texture>
				<visible>ListItem.IsStereoscopic</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/bluray.png</texture>
				<visible>[String.Contains(ListItem.FilenameAndPath,bluray) | String.Contains(ListItem.FilenameAndPath,bdrip) | String.Contains(ListItem.FilenameAndPath,bd25) | String.Contains(ListItem.FilenameAndPath,bd50)]</visible>
			</control>
			<control type="group">
				<centertop>70%</centertop>
				<height>120</height>
				<width>64</width>
				<control type="image">
					<width>73</width>
					<height>55</height>
					<texture colordiffuse="Dark1">flags/imdb.png</texture>
					<visible>!String.IsEmpty(ListItem.Top250)</visible>
				</control>
				<control type="label">
					<top>24</top>
					<width>auto</width>
					<font>Flag</font>
					<align>center</align>
					<textcolor>Black700</textcolor>
					<label>$INFO[ListItem.Top250,#,]</label>
					<visible>!String.IsEmpty(ListItem.Top250)</visible>
				</control>
			</control>
		</control>
	</include>
	<include name="Furniture_Hub_Flags">
		<control type="grouplist">
			<visible>!Skin.HasSetting(furniture.flags)</visible>
			<visible>Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)</visible>
			<visible>!ListItem.IsParentFolder</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<left>0</left>
			<centerbottom>30</centerbottom>
			<width>1400</width>
			<height>120</height>
			<orientation>horizontal</orientation>
			<align>left</align>
			<itemgap>24</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="image">
				<width>48</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/airing.png</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>Container.Content(tvshows) | Container.Content(seasons)</visible>
			</control>
			<control type="label">
				<width min="128">auto</width>
				<centertop>50%</centertop>
				<height>64</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$VAR[LabelNextAiredDetails]</label>
				<font>Flag</font>
				<textcolor>Dark2</textcolor>
				<visible>Container.Content(tvshows) | Container.Content(seasons)</visible>
			</control>
			<control type="image">
				<width>108</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.VideoAspect,flags/aspectratio/,.png]</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.VideoResolution,flags/resolution/,.png]</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.VideoCodec,flags/video/,.png]</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<texture colordiffuse="Black700">$INFO[ListItem.AudioCodec,flags/audio/,.png]</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<texture colordiffuse="Black700">flags/audio/dts.png]</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!String.IsEmpty(ListItem.AudioCodec) + String.Contains(ListItem.AudioCodec,dts) + !String.Contains(ListItem.AudioCodec,dtshd_hra) + !String.Contains(ListItem.AudioCodec,dtshd_ma) + !String.Contains(ListItem.AudioCodec,dtshdma)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[ListItem.AudioChannels,flags/channels/,.png]</texture>
				<aspectratio align="left">scale</aspectratio>
				<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
			</control>
			<control type="group">
				<centertop>50%</centertop>
				<width>220</width>
				<height>50</height>
				<control type="image">
					<width>220</width>
					<height>50</height>
					<centertop>50%</centertop>
					<texture colordiffuse="Dark1">flags/time.png</texture>
					<aspectratio align="left">scale</aspectratio>
					<visible>!String.IsEmpty(ListItem.Duration) + [Control.IsVisible(500) | Control.IsVisible(503) | Control.IsVisible(505) | Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(54) | Control.IsVisible(57) | Control.IsVisible(58) | Control.IsVisible(53) | Control.IsVisible(52) | Control.IsVisible(56) | Control.IsVisible(55) | [Control.IsVisible(56) + Skin.HasSetting(56media.showinfo) + !Skin.HasSetting(56media.low)]]</visible>
				</control>
				<control type="label">
					<left>55</left>
					<width>165</width>
					<centertop>50%</centertop>
					<height>50</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Duration,, $LOCALIZE[31102] ]</label>
					<font>FlagHD</font>
					<textcolor>Dark1</textcolor>
					<visible>!String.IsEmpty(ListItem.Duration) + [Control.IsVisible(500) | Control.IsVisible(503) | Control.IsVisible(505) | Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(54) | Control.IsVisible(57) | Control.IsVisible(58) | Control.IsVisible(53) | Control.IsVisible(52) | Control.IsVisible(56) | Control.IsVisible(55) | [Control.IsVisible(56) + Skin.HasSetting(56media.showinfo) + !Skin.HasSetting(56media.low)]]</visible>
				</control>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/3D.png</texture>
				<visible>ListItem.IsStereoscopic</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/bluray.png</texture>
				<visible>[String.Contains(ListItem.FilenameAndPath,bluray) | String.Contains(ListItem.FilenameAndPath,bdrip) | String.Contains(ListItem.FilenameAndPath,bd25) | String.Contains(ListItem.FilenameAndPath,bd50)]</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/imdb.png</texture>
				<visible>!String.IsEmpty(ListItem.Top250)</visible>
			</control>
		</control>
	</include>
	<include name="Furniture_Logo">
		<control type="group">
			<visible>!Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
			<visible>Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)</visible>
			<visible>Skin.HasSetting(furniture.flags)</visible>
			<visible>!ListItem.IsParentFolder</visible>
			<left>1622</left>
			<top>960</top>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<control type="image">
				<width>258</width>
				<height>120</height>
				<texture background="true">$VAR[ClearLogo]</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
			</control>
		</control>
		<control type="group">
			<visible>!Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
			<visible>!Skin.HasSetting(furniture.flags)</visible>
			<visible>Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)</visible>
			<visible>!ListItem.IsParentFolder</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<left>0</left>
			<centerbottom>60</centerbottom>
			<width>1920</width>
			<height>120</height>
			<align>right</align>
			<control type="image">
				<right>0</right>
				<width>258</width>
				<height>120</height>
				<texture colordiffuse="Dark1">$VAR[Studio]</texture>
				<aspectratio align="left" aligny="center">keep</aspectratio>
			</control>
		</control>
	</include>
	<include name="Furniture_Adv_Launcher">
		<control type="group">
			<visible>Container.Content(Addons)</visible>
			<left>SidePad</left>
			<centerbottom>30</centerbottom>
			<width>1920</width>
			<height>120</height>
			<orientation>horizontal</orientation>
			<align>left</align>
			<itemgap>10</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="group">
				<centertop>50%</centertop>
				<height>50</height>
				<control type="label">
					<width min="128">auto</width>
					<centertop>50%</centertop>
					<height>64</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
					<font>Flag</font>
					<textcolor>White</textcolor>
					<visible>Control.IsVisible(513) | Control.IsVisible(514)</visible>
				</control>
			</control>
		</control>
		<control type="group">
			<visible>String.StartsWith(Container.FolderPath,plugin://plugin.program.advanced.launcher)</visible>
			<left>SidePad</left>
			<centerbottom>30</centerbottom>
			<width>1920</width>
			<height>120</height>
			<orientation>horizontal</orientation>
			<align>left</align>
			<itemgap>10</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="group">
				<centertop>50%</centertop>
				<height>50</height>
				<control type="label">
					<width min="128">auto</width>
					<centertop>50%</centertop>
					<height>64</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Year,, ·][COLOR gray]$INFO[ListItem.Studio, ,][/COLOR]</label>
					<font>Flag</font>
					<textcolor>White</textcolor>
					<visible>Control.IsVisible(53) + !String.IsEmpty(ListItem.Year)</visible>
				</control>
				<control type="label">
					<width min="128">auto</width>
					<centertop>50%</centertop>
					<height>64</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Genre] · [COLOR gray]$INFO[ListItem.Studio][/COLOR]</label>
					<font>Flag</font>
					<textcolor>White</textcolor>
					<visible>[Control.IsVisible(50) | Control.IsVisible(550) | Control.IsVisible(52)  | Control.IsVisible(500)] + !String.IsEmpty(ListItem.Genre) + !String.IsEmpty(ListItem.Studio)</visible>
				</control>
				<control type="label">
					<width min="128">auto</width>
					<centertop>50%</centertop>
					<height>64</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Genre]</label>
					<font>Flag</font>
					<textcolor>White</textcolor>
					<visible>[Control.IsVisible(50) | Control.IsVisible(550) | Control.IsVisible(52) | Control.IsVisible(500)] + !String.IsEmpty(ListItem.Genre) + String.IsEmpty(ListItem.Studio)</visible>
				</control>
				<control type="label">
					<width min="128">auto</width>
					<centertop>50%</centertop>
					<height>64</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>[COLOR gray]$INFO[ListItem.Studio][/COLOR]</label>
					<font>Flag</font>
					<textcolor>White</textcolor>
					<visible>[Control.IsVisible(50) | Control.IsVisible(550) | Control.IsVisible(52)  | Control.IsVisible(500)] + String.IsEmpty(ListItem.Genre) + !String.IsEmpty(ListItem.Studio)</visible>
				</control>
				<control type="label">
					<width min="128">auto</width>
					<centertop>50%</centertop>
					<height>64</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>[B]$INFO[ListItem.Label][/B]</label>
					<font>Flag</font>
					<textcolor>White</textcolor>
					<visible>Control.IsVisible(513) | Control.IsVisible(514)</visible>
				</control>
			</control>
		</control>
	</include>
	<variable name="HeaderIcon">
		<value condition="Window.IsVisible(Home)+!Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml)">common/null.png</value>
		<value condition="Player.Muted">special://skin/extras/icons/mute.png</value>
		<value condition="Window.IsVisible(DialogButtonMenu.xml)">special://skin/extras/icons/power.png</value>
		<value condition="Window.IsVisible(DialogFavourites.xml)">special://skin/extras/icons/favourites.png</value>
		<value condition="Window.IsVisible(1101)">special://skin/extras/icons/film.png</value>
		<value condition="Window.IsVisible(1102)">special://skin/extras/icons/tv.png</value>
		<value condition="Window.IsVisible(1103) | Window.IsVisible(1104) | Window.IsVisible(1105)">special://skin/extras/icons/director.png</value>
		<value condition="Player.HasAudio + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/songs.png</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(livetv) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/livetv.png</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(movies) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/film.png</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(episodes) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/tv.png</value>
		<value condition="Player.HasVideo + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]">special://skin/extras/icons/appearance.png</value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-YoutubeList.xml)">special://skin/extras/icons/youtube.png</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)">special://skin/extras/icons/info.png</value>
		<value condition="Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)">special://skin/extras/icons/tvguide.png</value>
		<value condition="String.StartsWith(Container.FolderPath,sources://)">special://skin/extras/icons/files.png</value>
		<value condition="String.StartsWith(Container.FolderPath,special://videoplaylists/)">special://skin/extras/icons/playlist.png</value>
		<value condition="String.IsEqual(Container.FolderPath,special://profile/playlists/)">special://skin/extras/icons/playlist.png</value>
		<value condition="String.IsEqual(Container.FolderPath,special://profile/playlists/video/)">special://skin/extras/icons/playlist.png</value>
		<value condition="String.IsEqual(Container.FolderPath,special://profile/playlists/music/)">special://skin/extras/icons/playlist.png</value>
		<value condition="String.IsEqual(Container.FolderPath,special://profile/playlists/mixed/)">special://skin/extras/icons/playlist.png</value>
		<value condition="Window.IsVisible(MyMusicPlaylistEditor.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)">special://skin/extras/icons/songs.png</value>
		<value condition="String.StartsWith(Container.FolderPath,library://video/movies/)">special://skin/extras/icons/film.png</value>
		<value condition="String.StartsWith(Container.FolderPath,library://video/tvshows/)">special://skin/extras/icons/tv.png</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://movies/)">special://skin/extras/icons/film.png</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://tvshows/)">special://skin/extras/icons/tv.png</value>
		<value condition="String.StartsWith(Container.FolderPath,plugin://)">special://skin/extras/icons/video-addons.png</value>
		<value condition="Container.Content(movies)">special://skin/extras/icons/film.png</value>
		<value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">special://skin/extras/icons/tv.png</value>
		<value condition="Container.Content(songs)">special://skin/extras/icons/songs.png</value>
		<value condition="Container.Content(livetv)">special://skin/extras/icons/livetv.png</value>
		<value condition="Container.Content(files)">special://skin/extras/icons/files.png</value>
		<value condition="Container.Content(plugins)">special://skin/extras/icons/video-addons.png</value>
		<value condition="Container.Content(addons)">special://skin/extras/icons/addons.png</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://musicvideos/)">special://skin/extras/icons/musicvideo.png</value>
		<value condition="Window.IsVisible(ColorPicker.xml)">special://skin/extras/icons/wand.png</value>
		<value condition="Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml)">special://skin/extras/icons/livetv.png</value>
		<value condition="Window.IsVisible(MyMusicPlaylistEditor.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)">special://skin/extras/icons/songs.png</value>
		<value condition="Window.IsVisible(MyPics.xml)">special://skin/extras/icons/pictures.png</value>
		<value condition="Window.IsVisible(MyPrograms.xml) | Window.IsVisible(AddonBrowser.xml)">special://skin/extras/icons/addons.png</value>
		<value condition="Window.IsVisible(weather)">special://skin/extras/icons/sun.png</value>
		<value condition="Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(SkinSettings.xml)">special://skin/extras/icons/settings.png</value>
		<value condition="Window.IsVisible(MyMusicPlaylist.xml)">special://skin/extras/icons/playlist.png</value>
		<value condition="Window.IsVisible(FileManager.xml)">special://skin/extras/icons/database.png</value>
		<value condition="Window.IsVisible(MyVideoNav.xml)">special://skin/extras/icons/video-addons.png</value>
		<value>special://skin/extras/icons/artist.png</value>
	</variable>
	<variable name="MainHeaderLabel">
		<value condition="Skin.HasSetting(hide.busydialog) + Window.IsVisible(DialogBusy.xml)">$LOCALIZE[20186]...</value>
		<value condition="Window.IsVisible(ColorPicker.xml)">Pick a Colour</value>
		<value condition="Window.IsVisible(MyMusicPlaylistEditor.xml)">$LOCALIZE[20011]</value>
		<value condition="Window.IsVisible(DialogButtonMenu.xml)">$LOCALIZE[33060]</value>
		<value condition="Window.IsVisible(DialogFavourites.xml)">$LOCALIZE[1036]</value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-YoutubeList.xml)">$LOCALIZE[31141]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) + Container.Content(musicvideos) + !String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) + !Container.Content(episodes) + !Container.Content(seasons) + !Container.Content(tvshows)">$INFO[ListItem.Title]$INFO[ListItem.Year,(,)]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml)">$INFO[ListItem.Title]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) + Container.Content(episodes) + !String.IsEmpty(ListItem.TvShowTitle)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="Window.IsVisible(DialogMusicInfo.xml) + Container.Content(artists)">$INFO[ListItem.Label]</value>
		<value condition="Window.IsVisible(DialogMusicInfo.xml) + Container.Content(albums)">$INFO[ListItem.Title] ($INFO[ListItem.Year])</value>
		<value condition="Window.IsVisible(DialogMusicInfo.xml) + Container.Content(songs)">$INFO[ListItem.Label]</value>
		<value condition="Window.IsVisible(DialogMusicInfo.xml)">$INFO[ListItem.Label]</value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)">$LOCALIZE[31241]</value>		
		<value condition="Window.IsVisible(MyVideoNav.xml) + Control.HasFocus(515) + Container.Content(movies)">$INFO[ListItem.Label]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + String.IsEqual(Container.FolderPath,videodb://movies/titles/)">$LOCALIZE[20342]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + String.IsEqual(Container.FolderPath,videodb://tvshows/titles/)">$LOCALIZE[20343]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + String.StartsWith(Container.FolderPath,videodb://movies/)">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + String.StartsWith(Container.FolderPath,videodb://tvshows/) + Container.Content(episodes) + !String.IsEmpty(ListItem.TvShowTitle)">$INFO[ListItem.TvShowTitle]$INFO[ListItem.Season, - Season ,]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + String.StartsWith(Container.FolderPath,videodb://tvshows/)">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + !String.IsEmpty(Container.FolderName)">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml)">$LOCALIZE[3]</value>
		<value condition="Window.IsVisible(MyPVRChannels.xml)">$LOCALIZE[19019]</value>
		<value condition="Window.IsVisible(MyPVRGuide.xml)">$LOCALIZE[4]</value>
		<value condition="Window.IsVisible(MyPVRRecordings.xml)">$LOCALIZE[19017]</value>
		<value condition="Window.IsVisible(MyPVRTimers.xml)">$LOCALIZE[19040]</value>
		<value condition="Window.IsVisible(MyPVRSearch.xml)">$LOCALIZE[137]</value>
		<value condition="!String.IsEmpty(Container.FolderName) + [Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)]">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)">$LOCALIZE[2]</value>
		<value condition="Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(SkinSettings.xml)">$LOCALIZE[5]</value>
		<value condition="Window.IsVisible(weather)">$LOCALIZE[8]</value>
		<value condition="!String.IsEmpty(Container.FolderName) + Window.IsVisible(MyPics.xml)">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyPics.xml)">$LOCALIZE[1]</value>
		<value condition="Window.IsVisible(MyPrograms.xml)">$LOCALIZE[0]</value>
		<value condition="Window.IsVisible(AddonBrowser.xml)">$LOCALIZE[24001]</value>
		<value condition="Window.IsVisible(MyMusicPlaylist.xml)">$LOCALIZE[559]</value>
		<value condition="Window.IsVisible(FileManager.xml)">$LOCALIZE[744]</value>
		<value condition="Window.IsVisible(1101)">$LOCALIZE[31192]</value>
		<value condition="Window.IsVisible(1102)">$LOCALIZE[31193]</value>
		<value condition="Window.IsVisible(1103) + String.IsEqual(Window(1103).Property(content),1)">$INFO[Window(home).Property(ExtStudio),$LOCALIZE[31205] ,]</value>
		<value condition="Window.IsVisible(1103) + String.IsEqual(Window(1103).Property(content),2)">$INFO[Window(home).Property(ExtMovie),$LOCALIZE[31204] ,]</value>
		<value condition="Window.IsVisible(1103)">$INFO[Window(home).Property(ExtDirector),$LOCALIZE[31191] ,]</value>
		<value condition="Window.IsVisible(1104) + String.IsEqual(Window(1104).Property(content),1)">$LOCALIZE[31211]</value>
		<value condition="Window.IsVisible(1104) + String.IsEqual(Window(1104).Property(content),2)">$LOCALIZE[31210]</value>
		<value condition="Window.IsVisible(1104) + String.IsEqual(Window(1104).Property(content),3)">$LOCALIZE[31209]</value>
		<value condition="Window.IsVisible(1104)">$LOCALIZE[31208]</value>
		<value condition="Window.IsVisible(1105) + String.IsEqual(Window(1105).Property(content),1)">$LOCALIZE[31211]</value>
		<value condition="Window.IsVisible(1105) + String.IsEqual(Window(1105).Property(content),2)">$LOCALIZE[31210]</value>
		<value condition="Window.IsVisible(1105) + String.IsEqual(Window(1105).Property(content),3)">$LOCALIZE[31212]</value>
		<value condition="Window.IsVisible(1105)">$LOCALIZE[31213]</value>
		<value>$LOCALIZE[10000]</value>
	</variable>
	<variable name="SubHeaderLabel">
		<value condition="Window.IsVisible(home)">$VAR[EmbyFooterLabel]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + Control.HasFocus(515) + Container.Content(movies)">$INFO[ListItem.Year]</value>
		<value condition="Window.IsVisible(DialogMusicInfo.xml) + Container.Content(artists)">$INFO[ListItem.Property(Artist_Genre)]</value>
		<value condition="Window.IsVisible(DialogMusicInfo.xml) + Container.Content(albums)">$INFO[ListItem.AlbumArtist]$INFO[ListItem.Genre, • ,]</value>
		<value condition="Container.Content(songs) + Integer.IsGreater(ListItem.TrackNumber, 0) + Integer.IsLess(ListItem.TrackNumber,10)">$INFO[ListItem.TrackNumber,0, • ]$INFO[ListItem.Title]$INFO[ListItem.Album, • ,]$INFO[ListItem.Year, (,)]$INFO[ListItem.Artist, • ]$INFO[ListItem.Genre, • ,]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.TrackNumber,, • ]$INFO[ListItem.Title]$INFO[ListItem.Album, • ,]$INFO[ListItem.Year, (,)]$INFO[ListItem.Artist, • ]$INFO[ListItem.Genre, • ,]</value>
		<value condition="Window.IsVisible(DialogMusicInfo.xml) + Container.Content(songs)">$INFO[ListItem.TrackNumber,, • ]$INFO[ListItem.Album]$INFO[ListItem.Year, (,)]$INFO[ListItem.Artist, • ,]$INFO[ListItem.Genre, • ,]</value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-YoutubeList.xml)">$INFO[Window.Property(Filter_Label),, ]$INFO[Window.Property(TotalItems),, $LOCALIZE[31101]]</value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)">$LOCALIZE[31242]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) + Container.Content(movies)">$INFO[ListItem.TagLine]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) + Container.Content(episodes)">$VAR[ListItemSeasonVar,S]-$VAR[ListItemEpisodeVar,E] • [COLOR Black300]Premiered:[/COLOR] $INFO[ListItem.Premiered]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) + Container.Content(tvshows)">[COLOR Black300]Premiered:[/COLOR] $INFO[ListItem.Premiered]</value>
		<value condition="Window.IsVisible(LoginScreen.xml)">$LOCALIZE[10029]</value>
		<value condition="[Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml)]">[COLOR=$VAR[ColourHighlight]]$INFO[Container.NumItems,,[/COLOR] $LOCALIZE[31101]]$INFO[Control.GetLabel(3), • ,]$INFO[Control.GetLabel(28), • ,]</value>
		<value condition="!String.IsEmpty(Container.NumItems) + !Window.IsVisible(home) + Window.IsVisible(MyVideoNav.xml) + Integer.IsGreater(Container.TotalUnWatched,0) + !Window.IsVisible(DialogVideoInfo.xml)">[COLOR=$VAR[ColourHighlight]]$INFO[Container.CurrentItem] / $INFO[Container.NumItems][/COLOR] $LOCALIZE[31101] • [COLOR=$VAR[ColourHighlight]]$INFO[Container.TotalUnWatched,, [/COLOR] $LOCALIZE[31215]] [COLOR=$VAR[ColourHighlight2]]$INFO[Control.GetLabel(3), • ,][/COLOR]</value>
		<value condition="!String.IsEmpty(Container.NumItems) + !Window.IsVisible(home) + Window.IsVisible(MyVideoNav.xml) + !Integer.IsGreater(Container.TotalUnWatched,0) + !Window.IsVisible(DialogVideoInfo.xml)">[COLOR=$VAR[ColourHighlight]]$INFO[Container.CurrentItem] / $INFO[Container.NumItems,,[/COLOR] $LOCALIZE[31101]] [COLOR=$VAR[ColourHighlight2]]$INFO[Control.GetLabel(3), • ,][/COLOR]</value>
		<value condition="!String.IsEmpty(Container.NumItems) + !Window.IsVisible(home)  + !Window.IsVisible(DialogVideoInfo.xml)">[COLOR=$VAR[ColourHighlight]]$INFO[Container.CurrentItem] / $INFO[Container.NumItems,,[/COLOR] $LOCALIZE[31101]]$INFO[Control.GetLabel(3), • ,]</value>
		<value condition="!String.IsEmpty(Container(9500).NumItems) + !Window.IsVisible(home) + !Window.IsVisible(DialogVideoInfo.xml)">[COLOR=$VAR[ColourHighlight]]$INFO[Container.CurrentItem] / $INFO[Container(9500).NumItems,,[/COLOR] $LOCALIZE[31101]]</value>
		<value condition="Window.IsVisible(MyWeather.xml) + !String.IsEmpty(Window(Weather).Property(Location))">[COLOR=$VAR[ColourHighlight]]$INFO[Weather.Temperature,,[/COLOR] ]$INFO[Window(Weather).Property(Location)]</value>
		<value condition="String.IsEmpty(Pvr.BackendChannels)">[COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(Movies.Count)][/COLOR] $LOCALIZE[20342] • [COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(TVShows.Count)][/COLOR] $LOCALIZE[20343] • [COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(Music.AlbumsCount)][/COLOR] $LOCALIZE[132]</value>
		<value>[COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(Movies.Count)][/COLOR] $LOCALIZE[20342] • [COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(TVShows.Count)][/COLOR] $LOCALIZE[20343] • [COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(Music.AlbumsCount)][/COLOR] $LOCALIZE[132] • [COLOR=$VAR[ColourHighlight]]$INFO[Pvr.BackendChannels][/COLOR] $LOCALIZE[19019]</value>
	</variable>
	<include name="Furniture_Header">
		<control type="grouplist">
			<top>40</top>
			<left>SidePad</left>
			<visible>!ControlGroup(303).HasFocus()</visible>
			<visible>!Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
			<include condition="!Window.IsVisible(script-ExtendedInfo Script-VideoList.xml)">Animation.FurnitureFadeInOut</include>
			<include condition="Window.IsVisible(script-ExtendedInfo Script-VideoList.xml)">FurnitureFadeInOutExtended</include>
			<orientation>horizontal</orientation>
			<itemgap>24</itemgap>
			<control type="group" description="iconbox">
				<width>80</width>
				<height>80</height>
				<control type="image">
					<width>80</width>
					<height>80</height>
					<texture colordiffuse="Panel" border="0">common/circle.png</texture>
				</control>
				<control id="8308" type="image">
					<texture colordiffuse="PanelWhite100" border="0" diffuse="common/circle.png">$VAR[HeaderIcon]</texture>
					<visible>false</visible>
				</control>
				<control type="image">
					<top>-14</top>
					<left>-14</left>
					<width>108</width>
					<height>108</height>
					<texture colordiffuse="PanelWhite100" border="0" diffuse="common/circle.png" >$VAR[HeaderIcon]</texture>
					<visible>!Container.Scrolling</visible>
					<visible>[!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)] + !String.Contains(Control.GetLabel(8308),null.png)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="image">
					<width>80</width>
					<height>80</height>
					<texture border="0" diffuse="common/circle.png">special://skin/extras/icons/emby2.png</texture>
					<visible>!Container.Scrolling</visible>
					<visible>[!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)] + String.Contains(Control.GetLabel(8308),null.png) + String.IsEmpty(Window(Home).Property(EmbyUserImage))</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="image">
					<width>80</width>
					<height>80</height>
					<texture border="0" diffuse="common/circle.png">$INFO[Window(Home).Property(EmbyUserImage)]</texture>
					<visible>!Container.Scrolling</visible>
					<visible>[!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)] + String.Contains(Control.GetLabel(8308),null.png) + !String.IsEmpty(Window(Home).Property(EmbyUserImage))</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
					<visible>!Control.HasFocus(3634)</visible>
				</control>
				<control type="button" id="3634">
					<width>80</width>
					<height>80</height>
					<onleft>301</onleft>
					<onright>301</onright>
					<onup>303</onup>
					<ondown>301</ondown>
					<onclick>RunPlugin("plugin://plugin.video.emby?mode=userprefs")</onclick>
					<font>Button</font>
					<texturefocus>-</texturefocus>
					<texturenofocus>-</texturenofocus>
					<visible>!Container.Scrolling</visible>
					<visible>[!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)] + String.Contains(Control.GetLabel(8308),null.png) + !String.IsEmpty(Window(Home).Property(EmbyUserImage))</visible>
				</control>
				<control type="image">
					<top>-14</top>
					<left>-14</left>
					<width>108</width>
					<height>108</height>
					<texture colordiffuse="$VAR[ColourHighlight]" border="0" diffuse="common/circle.png">special://skin/extras/icons/configure.png</texture>
					<visible>Control.HasFocus(3634)</visible>
				</control>
				<control type="label">
					<centertop>39</centertop>
					<centerleft>40</centerleft>
					<width>80</width>
					<height>80</height>
					<font>LargeBold</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.SortLetter,[UPPERCASE],[/UPPERCASE]]</label>
					<textcolor>PanelWhite100</textcolor>
					<visible>Container.Scrolling</visible>
					<visible>!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="image">
					<centertop>40</centertop>
					<centerleft>40</centerleft>
					<width>48</width>
					<height>48</height>
					 <texture colordiffuse="$VAR[ColourHighlight]">dialog/busy.gif</texture>
					<visible>Skin.HasSetting(hide.busydialog) + Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
			</control>
			<control type="group">
				<control type="label">
					<centertop>24</centertop>
					<width>auto</width>
					<font>MediumBold</font>
					<textcolor>Dark1</textcolor>
					<label>$VAR[MainHeaderLabel]</label>
				</control>
				<control type="label">
					<centertop>58</centertop>
					<font>Flag</font>
					<width>auto</width>
					<textcolor>Dark2</textcolor>
					<label>$VAR[SubHeaderLabel]</label>
				</control>
				<control type="label">
					<centertop>88</centertop>
					<font>Flag</font>
					<width>auto</width>
					<textcolor>Dark3</textcolor>
					<label>$VAR[EmbyEndTimeLabel,$LOCALIZE[31793] ,]</label>
				</control>
			</control>
		</control>
	</include>
	<include name="ExtendedFurniture_Header">
		<control type="grouplist">
			<top>3</top>
			<left>90</left>
			<visible>Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
			<include>Animation.FurnitureFadeInOutExtended</include>
			<orientation>horizontal</orientation>
			<itemgap>24</itemgap>
			<control type="group" description="iconbox">
				<width>80</width>
				<height>80</height>
				<control type="image">
					<width>80</width>
					<height>80</height>
					<texture colordiffuse="Panel" border="0">common/circle.png</texture>
				</control>
				<control type="image">
					<top>-14</top>
					<left>-14</left>
					<width>108</width>
					<height>108</height>
					<texture colordiffuse="PanelWhite100" border="0" diffuse="common/circle.png" >$VAR[HeaderIcon]</texture>
					<visible>!Container.Scrolling</visible>
					<visible>!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="label">
					<centertop>39</centertop>
					<centerleft>40</centerleft>
					<width>80</width>
					<height>80</height>
					<font>LargeBold</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.SortLetter,[UPPERCASE],[/UPPERCASE]]</label>
					<textcolor>PanelWhite100</textcolor>
					<visible>Container.Scrolling</visible>
					<visible>!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="image">
					<centertop>40</centertop>
					<centerleft>40</centerleft>
					<width>48</width>
					<height>48</height>
					 <texture colordiffuse="$VAR[ColourHighlight]">dialog/busy.gif</texture>
					<visible>Skin.HasSetting(hide.busydialog) + Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
			</control>
			<control type="group">
				<control type="label">
					<centertop>24</centertop>
					<width>auto</width>
					<font>MediumBold</font>
					<textcolor>Dark1</textcolor>
					<label>$VAR[MainHeaderLabel]</label>
				</control>
				<control type="label">
					<centertop>58</centertop>
					<font>Flag</font>
					<width>auto</width>
					<textcolor>Dark2</textcolor>
					<label>$VAR[SubHeaderLabel]</label>
				</control>
			</control>
		</control>
	</include>
	<include name="Furniture_Clock">
		<control type="image">
			<texture colordiffuse="Dark3">common/black.png</texture>
			<height>160</height>
		</control>
		<control type="image">
			<top>160</top>
			<texture colordiffuse="Dark3">common/black.png</texture>
			<height>80</height>
			<visible>Window.IsVisible(Home) + !Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogMusicInfo.xml)</visible>
		</control>
		<control type="group">
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<top>40</top>
			<include>Animation.FurnitureFadeInOut</include>
			<height>84</height>
			<animation effect="slide" start="0" end="0,-10" time="150" condition="Skin.HasSetting(furniture.weather)">Conditional</animation>
			<control type="label">
				<centertop>24</centertop>
				<right>130</right>
				<align>right</align>
				<font>LargeBold</font>
				<textcolor>Dark1</textcolor>
				<label>$INFO[System.Time(hh:mm)]</label>
				<animation effect="slide" start="0" end="50" time="0" condition="String.IsEmpty(System.Time(xx))">Conditional</animation>
			</control>
			<control type="label">
				<centertop>30</centertop>
				<right>SidePad</right>
				<font>SmallBold</font>
				<textcolor>Dark3</textcolor>
				<align>right</align>
				<width>120</width>
				<label>$INFO[System.Time(xx)]</label>
				<visible>!String.IsEmpty(System.Time(xx))</visible>
			</control>
			<control type="label">
				<centertop>64</centertop>
				<right>SidePad</right>
				<font>Flag</font>
				<textcolor>Dark2</textcolor>
				<align>right</align>
				<width>50%</width>
				<label>$INFO[System.Date(DDD)]$COMMA $INFO[System.Date(d MMM yyyy)]</label>
			</control>
			<control type="label">
				<centertop>92</centertop>
				<right>SidePad</right>
				<font>Flag</font>
				<textcolor>Dark3</textcolor>
				<align>right</align>
				<width>50%</width>
				<visible>Skin.HasSetting(furniture.weather)</visible>
				<label>[COLOR=$VAR[ColourHighlight]]$INFO[Weather.Temperature][/COLOR] $INFO[Weather.Conditions]</label>
			</control>
		</control>
	</include>
	<variable name="HomeFlagstar1">
		<value condition="Integer.IsGreater(Container(301).ListItem.Rating,1)">star10</value>
		<value condition="Integer.IsGreater(Container(301).ListItem.Rating,0)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HomeFlagstar2">
		<value condition="Integer.IsGreater(Container(301).ListItem.Rating,3)">star10</value>
		<value condition="Integer.IsGreater(Container(301).ListItem.Rating,2)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HomeFlagstar3">
		<value condition="Integer.IsGreater(Container(301).ListItem.Rating,5)">star10</value>
		<value condition="Integer.IsGreater(Container(301).ListItem.Rating,4)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HomeFlagstar4">
		<value condition="Integer.IsGreater(Container(301).ListItem.Rating,7)">star10</value>
		<value condition="Integer.IsGreater(Container(301).ListItem.Rating,6)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HomeFlagstar5">
		<value condition="Integer.IsGreater(Container(301).ListItem.Rating,9)">star10</value>
		<value condition="Integer.IsGreater(Container(301).ListItem.Rating,8)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="ClearLogoTopVar">
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(Container(9500).ListItem.Art(clearlogo))">$INFO[Container(9500).ListItem.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(Container(9500).ListItem.Art(tvshow.clearlogo))">$INFO[Container(9500).ListItem.Art(tvshow.clearlogo)]</value>
	</variable>
	<include name="Furniture_OverlayInfo">
		<control type="group">
			<control type="group">
				<height>100%</height>
				<width>100%</width>
				<include>Animation.FadeIn</include>
				<include>Animation.FadeOut</include>
				<include>GlobalOverlay</include>
			</control>
			<visible>![Container.Content(songs) | Container.Content(albums)]</visible>
			<visible>![Skin.HasSetting(osd.hidespoilers) + Container.Content(episodes) + [String.IsEqual(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]]</visible>
			<visible>[!Window.IsVisible(DialogVideoInfo.xml) + System.IdleTime(5) + Skin.HasSetting(furniture.overlayinfo)] | Control.HasFocus(9601) | [System.IdleTime(5) + Window.IsVisible(DialogVideoInfo.xml) + Control.HasFocus(132)]</visible>
			<visible>![Window.IsVisible(script-skinshortcuts.xml) | Window.IsVisible(DialogSongInfo.xml) | Window.IsVisible(DialogPictureInfo.xml) | Window.IsVisible(FileBrowser.xml) | Window.IsVisible(DialogProgress.xml) | Window.IsVisible(DialogYesNo.xml) | Window.IsVisible(DialogOK.xml) | Window.IsVisible(DialogSelect.xml) | Window.IsVisible(DialogContextMenu.xml) | Window.IsVisible(DialogButtonMenu.xml) | ControlGroup(9000).HasFocus()]</visible>
			<visible>[!String.IsEmpty(Window(home).Property(SkinHelper.MovieSet.ExtendedPlot)) + [Container.Content(Sets) | String.StartsWith(ListItem.Path,videodb://movies/sets)]] | !String.IsEmpty(ListItem.Plot)</visible>
			<include>Animation.FadeIn.Slide</include>
			<control type="group">
				<left>10</left>
				<top>10</top>
				<width>613</width>
				<height>920</height>
				<control type="image">
					<aspectratio scalediffuse="false">stretch</aspectratio>
					<texture background="true">$VAR[PosterImage]</texture>
					<animation type="conditional" condition="true" reversible="false">
						<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out" />
					</animation>
					<visible>!Container.Content(episodes)</visible>
				</control>
				<control type="group">
					<control type="image">
						<top>100</top>
						<width>613</width>
						<height>450</height>
						<aspectratio scalediffuse="false">scale</aspectratio>
						<texture background="true">$INFO[ListItem.Icon]</texture>
						<animation type="conditional" condition="true" reversible="false">
							<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out" />
						</animation>
					</control>
					<control type="image">
						<top>570</top>
						<width>613</width>
						<height>450</height>
						<aspectratio scalediffuse="false">keep</aspectratio>
						<texture background="true">$INFO[ListItem.Art(tvshow.landscape)]</texture>
						<animation type="conditional" condition="true" reversible="false">
							<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out" />
						</animation>
					</control>
					<visible>Container.Content(episodes)</visible>
				</control>
				<animation type="conditional" condition="true" reversible="false">
					<effect type="zoom" start="100" end="94" time="200" center="auto" tween="quadratic" easing="out" />
					<effect type="rotate" end="-1" time="200" center="auto" tween="quadratic" easing="out" />
				</animation>
			</control>
			<control type="label">
				<description>header label</description>
				<top>100</top>
				<left>643</left>
				<right>30</right>
				<font>EpisodeNumber</font>
				<textcolor>white</textcolor>
				<height>45</height>
				<label>$VAR[LabelOverlayTitle]</label>
				<scroll>true</scroll>
			</control>
			<control type="textbox">
				<description>textarea</description>
				<left>643</left>
				<right>30</right>
				<top>210</top>
				<align>justify</align>
				<font>Medium</font>
				<textcolor>white</textcolor>
				<label>$VAR[LabelOverlayPlot]</label>
			</control>
		</control>
	</include>
</includes>
